/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddAlertRequestWarningInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddAlertRequestWarningInput{}

// AddAlertRequestWarningInput struct for AddAlertRequestWarningInput
type AddAlertRequestWarningInput struct {
	Rules []SmartRule `json:"rules,omitempty"`
	TickerId *int32 `json:"tickerId,omitempty"`
	// 1 is once a day, 2 is once a minute
	WarningFrequency *int32 `json:"warningFrequency,omitempty"`
	// 1 is once, 0 is repeating
	WarningInterval *int32 `json:"warningInterval,omitempty"`
}

// NewAddAlertRequestWarningInput instantiates a new AddAlertRequestWarningInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAlertRequestWarningInput() *AddAlertRequestWarningInput {
	this := AddAlertRequestWarningInput{}
	var tickerId int32 = 913243251
	this.TickerId = &tickerId
	var warningFrequency int32 = 1
	this.WarningFrequency = &warningFrequency
	var warningInterval int32 = 1
	this.WarningInterval = &warningInterval
	return &this
}

// NewAddAlertRequestWarningInputWithDefaults instantiates a new AddAlertRequestWarningInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAlertRequestWarningInputWithDefaults() *AddAlertRequestWarningInput {
	this := AddAlertRequestWarningInput{}
	var tickerId int32 = 913243251
	this.TickerId = &tickerId
	var warningFrequency int32 = 1
	this.WarningFrequency = &warningFrequency
	var warningInterval int32 = 1
	this.WarningInterval = &warningInterval
	return &this
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *AddAlertRequestWarningInput) GetRules() []SmartRule {
	if o == nil || IsNil(o.Rules) {
		var ret []SmartRule
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequestWarningInput) GetRulesOk() ([]SmartRule, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *AddAlertRequestWarningInput) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []SmartRule and assigns it to the Rules field.
func (o *AddAlertRequestWarningInput) SetRules(v []SmartRule) {
	o.Rules = v
}

// GetTickerId returns the TickerId field value if set, zero value otherwise.
func (o *AddAlertRequestWarningInput) GetTickerId() int32 {
	if o == nil || IsNil(o.TickerId) {
		var ret int32
		return ret
	}
	return *o.TickerId
}

// GetTickerIdOk returns a tuple with the TickerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequestWarningInput) GetTickerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TickerId) {
		return nil, false
	}
	return o.TickerId, true
}

// HasTickerId returns a boolean if a field has been set.
func (o *AddAlertRequestWarningInput) HasTickerId() bool {
	if o != nil && !IsNil(o.TickerId) {
		return true
	}

	return false
}

// SetTickerId gets a reference to the given int32 and assigns it to the TickerId field.
func (o *AddAlertRequestWarningInput) SetTickerId(v int32) {
	o.TickerId = &v
}

// GetWarningFrequency returns the WarningFrequency field value if set, zero value otherwise.
func (o *AddAlertRequestWarningInput) GetWarningFrequency() int32 {
	if o == nil || IsNil(o.WarningFrequency) {
		var ret int32
		return ret
	}
	return *o.WarningFrequency
}

// GetWarningFrequencyOk returns a tuple with the WarningFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequestWarningInput) GetWarningFrequencyOk() (*int32, bool) {
	if o == nil || IsNil(o.WarningFrequency) {
		return nil, false
	}
	return o.WarningFrequency, true
}

// HasWarningFrequency returns a boolean if a field has been set.
func (o *AddAlertRequestWarningInput) HasWarningFrequency() bool {
	if o != nil && !IsNil(o.WarningFrequency) {
		return true
	}

	return false
}

// SetWarningFrequency gets a reference to the given int32 and assigns it to the WarningFrequency field.
func (o *AddAlertRequestWarningInput) SetWarningFrequency(v int32) {
	o.WarningFrequency = &v
}

// GetWarningInterval returns the WarningInterval field value if set, zero value otherwise.
func (o *AddAlertRequestWarningInput) GetWarningInterval() int32 {
	if o == nil || IsNil(o.WarningInterval) {
		var ret int32
		return ret
	}
	return *o.WarningInterval
}

// GetWarningIntervalOk returns a tuple with the WarningInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequestWarningInput) GetWarningIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.WarningInterval) {
		return nil, false
	}
	return o.WarningInterval, true
}

// HasWarningInterval returns a boolean if a field has been set.
func (o *AddAlertRequestWarningInput) HasWarningInterval() bool {
	if o != nil && !IsNil(o.WarningInterval) {
		return true
	}

	return false
}

// SetWarningInterval gets a reference to the given int32 and assigns it to the WarningInterval field.
func (o *AddAlertRequestWarningInput) SetWarningInterval(v int32) {
	o.WarningInterval = &v
}

func (o AddAlertRequestWarningInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddAlertRequestWarningInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	if !IsNil(o.TickerId) {
		toSerialize["tickerId"] = o.TickerId
	}
	if !IsNil(o.WarningFrequency) {
		toSerialize["warningFrequency"] = o.WarningFrequency
	}
	if !IsNil(o.WarningInterval) {
		toSerialize["warningInterval"] = o.WarningInterval
	}
	return toSerialize, nil
}

type NullableAddAlertRequestWarningInput struct {
	value *AddAlertRequestWarningInput
	isSet bool
}

func (v NullableAddAlertRequestWarningInput) Get() *AddAlertRequestWarningInput {
	return v.value
}

func (v *NullableAddAlertRequestWarningInput) Set(val *AddAlertRequestWarningInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAlertRequestWarningInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAlertRequestWarningInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAlertRequestWarningInput(val *AddAlertRequestWarningInput) *NullableAddAlertRequestWarningInput {
	return &NullableAddAlertRequestWarningInput{value: val, isSet: true}
}

func (v NullableAddAlertRequestWarningInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAlertRequestWarningInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


