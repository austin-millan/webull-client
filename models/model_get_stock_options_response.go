/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetStockOptionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetStockOptionsResponse{}

// GetStockOptionsResponse struct for GetStockOptionsResponse
type GetStockOptionsResponse struct {
	Change *string `json:"change,omitempty"`
	ChangeRatio *string `json:"changeRatio,omitempty"`
	Close *string `json:"close,omitempty"`
	DisExchangeCode *string `json:"disExchangeCode,omitempty"`
	DisSymbol *string `json:"disSymbol,omitempty"`
	ExpireDate *string `json:"expireDate,omitempty"`
	ExpireDateList []GetStockOptionsResponseExpireDateListInner `json:"expireDateList,omitempty"`
	Name *string `json:"name,omitempty"`
	TickerId *int32 `json:"tickerId,omitempty"`
	UnSymbol *string `json:"unSymbol,omitempty"`
}

// NewGetStockOptionsResponse instantiates a new GetStockOptionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStockOptionsResponse() *GetStockOptionsResponse {
	this := GetStockOptionsResponse{}
	return &this
}

// NewGetStockOptionsResponseWithDefaults instantiates a new GetStockOptionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStockOptionsResponseWithDefaults() *GetStockOptionsResponse {
	this := GetStockOptionsResponse{}
	return &this
}

// GetChange returns the Change field value if set, zero value otherwise.
func (o *GetStockOptionsResponse) GetChange() string {
	if o == nil || IsNil(o.Change) {
		var ret string
		return ret
	}
	return *o.Change
}

// GetChangeOk returns a tuple with the Change field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponse) GetChangeOk() (*string, bool) {
	if o == nil || IsNil(o.Change) {
		return nil, false
	}
	return o.Change, true
}

// HasChange returns a boolean if a field has been set.
func (o *GetStockOptionsResponse) HasChange() bool {
	if o != nil && !IsNil(o.Change) {
		return true
	}

	return false
}

// SetChange gets a reference to the given string and assigns it to the Change field.
func (o *GetStockOptionsResponse) SetChange(v string) {
	o.Change = &v
}

// GetChangeRatio returns the ChangeRatio field value if set, zero value otherwise.
func (o *GetStockOptionsResponse) GetChangeRatio() string {
	if o == nil || IsNil(o.ChangeRatio) {
		var ret string
		return ret
	}
	return *o.ChangeRatio
}

// GetChangeRatioOk returns a tuple with the ChangeRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponse) GetChangeRatioOk() (*string, bool) {
	if o == nil || IsNil(o.ChangeRatio) {
		return nil, false
	}
	return o.ChangeRatio, true
}

// HasChangeRatio returns a boolean if a field has been set.
func (o *GetStockOptionsResponse) HasChangeRatio() bool {
	if o != nil && !IsNil(o.ChangeRatio) {
		return true
	}

	return false
}

// SetChangeRatio gets a reference to the given string and assigns it to the ChangeRatio field.
func (o *GetStockOptionsResponse) SetChangeRatio(v string) {
	o.ChangeRatio = &v
}

// GetClose returns the Close field value if set, zero value otherwise.
func (o *GetStockOptionsResponse) GetClose() string {
	if o == nil || IsNil(o.Close) {
		var ret string
		return ret
	}
	return *o.Close
}

// GetCloseOk returns a tuple with the Close field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponse) GetCloseOk() (*string, bool) {
	if o == nil || IsNil(o.Close) {
		return nil, false
	}
	return o.Close, true
}

// HasClose returns a boolean if a field has been set.
func (o *GetStockOptionsResponse) HasClose() bool {
	if o != nil && !IsNil(o.Close) {
		return true
	}

	return false
}

// SetClose gets a reference to the given string and assigns it to the Close field.
func (o *GetStockOptionsResponse) SetClose(v string) {
	o.Close = &v
}

// GetDisExchangeCode returns the DisExchangeCode field value if set, zero value otherwise.
func (o *GetStockOptionsResponse) GetDisExchangeCode() string {
	if o == nil || IsNil(o.DisExchangeCode) {
		var ret string
		return ret
	}
	return *o.DisExchangeCode
}

// GetDisExchangeCodeOk returns a tuple with the DisExchangeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponse) GetDisExchangeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DisExchangeCode) {
		return nil, false
	}
	return o.DisExchangeCode, true
}

// HasDisExchangeCode returns a boolean if a field has been set.
func (o *GetStockOptionsResponse) HasDisExchangeCode() bool {
	if o != nil && !IsNil(o.DisExchangeCode) {
		return true
	}

	return false
}

// SetDisExchangeCode gets a reference to the given string and assigns it to the DisExchangeCode field.
func (o *GetStockOptionsResponse) SetDisExchangeCode(v string) {
	o.DisExchangeCode = &v
}

// GetDisSymbol returns the DisSymbol field value if set, zero value otherwise.
func (o *GetStockOptionsResponse) GetDisSymbol() string {
	if o == nil || IsNil(o.DisSymbol) {
		var ret string
		return ret
	}
	return *o.DisSymbol
}

// GetDisSymbolOk returns a tuple with the DisSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponse) GetDisSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.DisSymbol) {
		return nil, false
	}
	return o.DisSymbol, true
}

// HasDisSymbol returns a boolean if a field has been set.
func (o *GetStockOptionsResponse) HasDisSymbol() bool {
	if o != nil && !IsNil(o.DisSymbol) {
		return true
	}

	return false
}

// SetDisSymbol gets a reference to the given string and assigns it to the DisSymbol field.
func (o *GetStockOptionsResponse) SetDisSymbol(v string) {
	o.DisSymbol = &v
}

// GetExpireDate returns the ExpireDate field value if set, zero value otherwise.
func (o *GetStockOptionsResponse) GetExpireDate() string {
	if o == nil || IsNil(o.ExpireDate) {
		var ret string
		return ret
	}
	return *o.ExpireDate
}

// GetExpireDateOk returns a tuple with the ExpireDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponse) GetExpireDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireDate) {
		return nil, false
	}
	return o.ExpireDate, true
}

// HasExpireDate returns a boolean if a field has been set.
func (o *GetStockOptionsResponse) HasExpireDate() bool {
	if o != nil && !IsNil(o.ExpireDate) {
		return true
	}

	return false
}

// SetExpireDate gets a reference to the given string and assigns it to the ExpireDate field.
func (o *GetStockOptionsResponse) SetExpireDate(v string) {
	o.ExpireDate = &v
}

// GetExpireDateList returns the ExpireDateList field value if set, zero value otherwise.
func (o *GetStockOptionsResponse) GetExpireDateList() []GetStockOptionsResponseExpireDateListInner {
	if o == nil || IsNil(o.ExpireDateList) {
		var ret []GetStockOptionsResponseExpireDateListInner
		return ret
	}
	return o.ExpireDateList
}

// GetExpireDateListOk returns a tuple with the ExpireDateList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponse) GetExpireDateListOk() ([]GetStockOptionsResponseExpireDateListInner, bool) {
	if o == nil || IsNil(o.ExpireDateList) {
		return nil, false
	}
	return o.ExpireDateList, true
}

// HasExpireDateList returns a boolean if a field has been set.
func (o *GetStockOptionsResponse) HasExpireDateList() bool {
	if o != nil && !IsNil(o.ExpireDateList) {
		return true
	}

	return false
}

// SetExpireDateList gets a reference to the given []GetStockOptionsResponseExpireDateListInner and assigns it to the ExpireDateList field.
func (o *GetStockOptionsResponse) SetExpireDateList(v []GetStockOptionsResponseExpireDateListInner) {
	o.ExpireDateList = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetStockOptionsResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetStockOptionsResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetStockOptionsResponse) SetName(v string) {
	o.Name = &v
}

// GetTickerId returns the TickerId field value if set, zero value otherwise.
func (o *GetStockOptionsResponse) GetTickerId() int32 {
	if o == nil || IsNil(o.TickerId) {
		var ret int32
		return ret
	}
	return *o.TickerId
}

// GetTickerIdOk returns a tuple with the TickerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponse) GetTickerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TickerId) {
		return nil, false
	}
	return o.TickerId, true
}

// HasTickerId returns a boolean if a field has been set.
func (o *GetStockOptionsResponse) HasTickerId() bool {
	if o != nil && !IsNil(o.TickerId) {
		return true
	}

	return false
}

// SetTickerId gets a reference to the given int32 and assigns it to the TickerId field.
func (o *GetStockOptionsResponse) SetTickerId(v int32) {
	o.TickerId = &v
}

// GetUnSymbol returns the UnSymbol field value if set, zero value otherwise.
func (o *GetStockOptionsResponse) GetUnSymbol() string {
	if o == nil || IsNil(o.UnSymbol) {
		var ret string
		return ret
	}
	return *o.UnSymbol
}

// GetUnSymbolOk returns a tuple with the UnSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockOptionsResponse) GetUnSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.UnSymbol) {
		return nil, false
	}
	return o.UnSymbol, true
}

// HasUnSymbol returns a boolean if a field has been set.
func (o *GetStockOptionsResponse) HasUnSymbol() bool {
	if o != nil && !IsNil(o.UnSymbol) {
		return true
	}

	return false
}

// SetUnSymbol gets a reference to the given string and assigns it to the UnSymbol field.
func (o *GetStockOptionsResponse) SetUnSymbol(v string) {
	o.UnSymbol = &v
}

func (o GetStockOptionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetStockOptionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Change) {
		toSerialize["change"] = o.Change
	}
	if !IsNil(o.ChangeRatio) {
		toSerialize["changeRatio"] = o.ChangeRatio
	}
	if !IsNil(o.Close) {
		toSerialize["close"] = o.Close
	}
	if !IsNil(o.DisExchangeCode) {
		toSerialize["disExchangeCode"] = o.DisExchangeCode
	}
	if !IsNil(o.DisSymbol) {
		toSerialize["disSymbol"] = o.DisSymbol
	}
	if !IsNil(o.ExpireDate) {
		toSerialize["expireDate"] = o.ExpireDate
	}
	if !IsNil(o.ExpireDateList) {
		toSerialize["expireDateList"] = o.ExpireDateList
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TickerId) {
		toSerialize["tickerId"] = o.TickerId
	}
	if !IsNil(o.UnSymbol) {
		toSerialize["unSymbol"] = o.UnSymbol
	}
	return toSerialize, nil
}

type NullableGetStockOptionsResponse struct {
	value *GetStockOptionsResponse
	isSet bool
}

func (v NullableGetStockOptionsResponse) Get() *GetStockOptionsResponse {
	return v.value
}

func (v *NullableGetStockOptionsResponse) Set(val *GetStockOptionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStockOptionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStockOptionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStockOptionsResponse(val *GetStockOptionsResponse) *NullableGetStockOptionsResponse {
	return &NullableGetStockOptionsResponse{value: val, isSet: true}
}

func (v NullableGetStockOptionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStockOptionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


