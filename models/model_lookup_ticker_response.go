/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LookupTickerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LookupTickerResponse{}

// LookupTickerResponse struct for LookupTickerResponse
type LookupTickerResponse struct {
	CategoryId *int32 `json:"categoryId,omitempty"`
	CategoryName *string `json:"categoryName,omitempty"`
	HasMore *bool `json:"hasMore,omitempty"`
	List []LookupTickerResponseListInner `json:"list,omitempty"`
}

// NewLookupTickerResponse instantiates a new LookupTickerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLookupTickerResponse() *LookupTickerResponse {
	this := LookupTickerResponse{}
	return &this
}

// NewLookupTickerResponseWithDefaults instantiates a new LookupTickerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLookupTickerResponseWithDefaults() *LookupTickerResponse {
	this := LookupTickerResponse{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *LookupTickerResponse) GetCategoryId() int32 {
	if o == nil || IsNil(o.CategoryId) {
		var ret int32
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LookupTickerResponse) GetCategoryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *LookupTickerResponse) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given int32 and assigns it to the CategoryId field.
func (o *LookupTickerResponse) SetCategoryId(v int32) {
	o.CategoryId = &v
}

// GetCategoryName returns the CategoryName field value if set, zero value otherwise.
func (o *LookupTickerResponse) GetCategoryName() string {
	if o == nil || IsNil(o.CategoryName) {
		var ret string
		return ret
	}
	return *o.CategoryName
}

// GetCategoryNameOk returns a tuple with the CategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LookupTickerResponse) GetCategoryNameOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryName) {
		return nil, false
	}
	return o.CategoryName, true
}

// HasCategoryName returns a boolean if a field has been set.
func (o *LookupTickerResponse) HasCategoryName() bool {
	if o != nil && !IsNil(o.CategoryName) {
		return true
	}

	return false
}

// SetCategoryName gets a reference to the given string and assigns it to the CategoryName field.
func (o *LookupTickerResponse) SetCategoryName(v string) {
	o.CategoryName = &v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *LookupTickerResponse) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LookupTickerResponse) GetHasMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMore) {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *LookupTickerResponse) HasHasMore() bool {
	if o != nil && !IsNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *LookupTickerResponse) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetList returns the List field value if set, zero value otherwise.
func (o *LookupTickerResponse) GetList() []LookupTickerResponseListInner {
	if o == nil || IsNil(o.List) {
		var ret []LookupTickerResponseListInner
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LookupTickerResponse) GetListOk() ([]LookupTickerResponseListInner, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *LookupTickerResponse) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given []LookupTickerResponseListInner and assigns it to the List field.
func (o *LookupTickerResponse) SetList(v []LookupTickerResponseListInner) {
	o.List = v
}

func (o LookupTickerResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LookupTickerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CategoryId) {
		toSerialize["categoryId"] = o.CategoryId
	}
	if !IsNil(o.CategoryName) {
		toSerialize["categoryName"] = o.CategoryName
	}
	if !IsNil(o.HasMore) {
		toSerialize["hasMore"] = o.HasMore
	}
	if !IsNil(o.List) {
		toSerialize["list"] = o.List
	}
	return toSerialize, nil
}

type NullableLookupTickerResponse struct {
	value *LookupTickerResponse
	isSet bool
}

func (v NullableLookupTickerResponse) Get() *LookupTickerResponse {
	return v.value
}

func (v *NullableLookupTickerResponse) Set(val *LookupTickerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLookupTickerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLookupTickerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLookupTickerResponse(val *LookupTickerResponse) *NullableLookupTickerResponse {
	return &NullableLookupTickerResponse{value: val, isSet: true}
}

func (v NullableLookupTickerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLookupTickerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


