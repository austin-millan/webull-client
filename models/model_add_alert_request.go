/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddAlertRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddAlertRequest{}

// AddAlertRequest struct for AddAlertRequest
type AddAlertRequest struct {
	DisExchangeCode *string `json:"disExchangeCode,omitempty"`
	DisSymbol *string `json:"disSymbol,omitempty"`
	EventWarningInput *AddAlertRequestEventWarningInput `json:"eventWarningInput,omitempty"`
	ExchangeCode *string `json:"exchangeCode,omitempty"`
	RegionId *string `json:"regionId,omitempty"`
	ShowCode *string `json:"showCode,omitempty"`
	TickerId *int32 `json:"tickerId,omitempty"`
	TickerName *string `json:"tickerName,omitempty"`
	TickerSymbol *string `json:"tickerSymbol,omitempty"`
	TickerType *string `json:"tickerType,omitempty"`
	TinyName *string `json:"tinyName,omitempty"`
	WarningInput *AddAlertRequestWarningInput `json:"warningInput,omitempty"`
}

// NewAddAlertRequest instantiates a new AddAlertRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAlertRequest() *AddAlertRequest {
	this := AddAlertRequest{}
	var tickerId int32 = 913243251
	this.TickerId = &tickerId
	return &this
}

// NewAddAlertRequestWithDefaults instantiates a new AddAlertRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAlertRequestWithDefaults() *AddAlertRequest {
	this := AddAlertRequest{}
	var tickerId int32 = 913243251
	this.TickerId = &tickerId
	return &this
}

// GetDisExchangeCode returns the DisExchangeCode field value if set, zero value otherwise.
func (o *AddAlertRequest) GetDisExchangeCode() string {
	if o == nil || IsNil(o.DisExchangeCode) {
		var ret string
		return ret
	}
	return *o.DisExchangeCode
}

// GetDisExchangeCodeOk returns a tuple with the DisExchangeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetDisExchangeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DisExchangeCode) {
		return nil, false
	}
	return o.DisExchangeCode, true
}

// HasDisExchangeCode returns a boolean if a field has been set.
func (o *AddAlertRequest) HasDisExchangeCode() bool {
	if o != nil && !IsNil(o.DisExchangeCode) {
		return true
	}

	return false
}

// SetDisExchangeCode gets a reference to the given string and assigns it to the DisExchangeCode field.
func (o *AddAlertRequest) SetDisExchangeCode(v string) {
	o.DisExchangeCode = &v
}

// GetDisSymbol returns the DisSymbol field value if set, zero value otherwise.
func (o *AddAlertRequest) GetDisSymbol() string {
	if o == nil || IsNil(o.DisSymbol) {
		var ret string
		return ret
	}
	return *o.DisSymbol
}

// GetDisSymbolOk returns a tuple with the DisSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetDisSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.DisSymbol) {
		return nil, false
	}
	return o.DisSymbol, true
}

// HasDisSymbol returns a boolean if a field has been set.
func (o *AddAlertRequest) HasDisSymbol() bool {
	if o != nil && !IsNil(o.DisSymbol) {
		return true
	}

	return false
}

// SetDisSymbol gets a reference to the given string and assigns it to the DisSymbol field.
func (o *AddAlertRequest) SetDisSymbol(v string) {
	o.DisSymbol = &v
}

// GetEventWarningInput returns the EventWarningInput field value if set, zero value otherwise.
func (o *AddAlertRequest) GetEventWarningInput() AddAlertRequestEventWarningInput {
	if o == nil || IsNil(o.EventWarningInput) {
		var ret AddAlertRequestEventWarningInput
		return ret
	}
	return *o.EventWarningInput
}

// GetEventWarningInputOk returns a tuple with the EventWarningInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetEventWarningInputOk() (*AddAlertRequestEventWarningInput, bool) {
	if o == nil || IsNil(o.EventWarningInput) {
		return nil, false
	}
	return o.EventWarningInput, true
}

// HasEventWarningInput returns a boolean if a field has been set.
func (o *AddAlertRequest) HasEventWarningInput() bool {
	if o != nil && !IsNil(o.EventWarningInput) {
		return true
	}

	return false
}

// SetEventWarningInput gets a reference to the given AddAlertRequestEventWarningInput and assigns it to the EventWarningInput field.
func (o *AddAlertRequest) SetEventWarningInput(v AddAlertRequestEventWarningInput) {
	o.EventWarningInput = &v
}

// GetExchangeCode returns the ExchangeCode field value if set, zero value otherwise.
func (o *AddAlertRequest) GetExchangeCode() string {
	if o == nil || IsNil(o.ExchangeCode) {
		var ret string
		return ret
	}
	return *o.ExchangeCode
}

// GetExchangeCodeOk returns a tuple with the ExchangeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetExchangeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeCode) {
		return nil, false
	}
	return o.ExchangeCode, true
}

// HasExchangeCode returns a boolean if a field has been set.
func (o *AddAlertRequest) HasExchangeCode() bool {
	if o != nil && !IsNil(o.ExchangeCode) {
		return true
	}

	return false
}

// SetExchangeCode gets a reference to the given string and assigns it to the ExchangeCode field.
func (o *AddAlertRequest) SetExchangeCode(v string) {
	o.ExchangeCode = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *AddAlertRequest) GetRegionId() string {
	if o == nil || IsNil(o.RegionId) {
		var ret string
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetRegionIdOk() (*string, bool) {
	if o == nil || IsNil(o.RegionId) {
		return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *AddAlertRequest) HasRegionId() bool {
	if o != nil && !IsNil(o.RegionId) {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given string and assigns it to the RegionId field.
func (o *AddAlertRequest) SetRegionId(v string) {
	o.RegionId = &v
}

// GetShowCode returns the ShowCode field value if set, zero value otherwise.
func (o *AddAlertRequest) GetShowCode() string {
	if o == nil || IsNil(o.ShowCode) {
		var ret string
		return ret
	}
	return *o.ShowCode
}

// GetShowCodeOk returns a tuple with the ShowCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetShowCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ShowCode) {
		return nil, false
	}
	return o.ShowCode, true
}

// HasShowCode returns a boolean if a field has been set.
func (o *AddAlertRequest) HasShowCode() bool {
	if o != nil && !IsNil(o.ShowCode) {
		return true
	}

	return false
}

// SetShowCode gets a reference to the given string and assigns it to the ShowCode field.
func (o *AddAlertRequest) SetShowCode(v string) {
	o.ShowCode = &v
}

// GetTickerId returns the TickerId field value if set, zero value otherwise.
func (o *AddAlertRequest) GetTickerId() int32 {
	if o == nil || IsNil(o.TickerId) {
		var ret int32
		return ret
	}
	return *o.TickerId
}

// GetTickerIdOk returns a tuple with the TickerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetTickerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TickerId) {
		return nil, false
	}
	return o.TickerId, true
}

// HasTickerId returns a boolean if a field has been set.
func (o *AddAlertRequest) HasTickerId() bool {
	if o != nil && !IsNil(o.TickerId) {
		return true
	}

	return false
}

// SetTickerId gets a reference to the given int32 and assigns it to the TickerId field.
func (o *AddAlertRequest) SetTickerId(v int32) {
	o.TickerId = &v
}

// GetTickerName returns the TickerName field value if set, zero value otherwise.
func (o *AddAlertRequest) GetTickerName() string {
	if o == nil || IsNil(o.TickerName) {
		var ret string
		return ret
	}
	return *o.TickerName
}

// GetTickerNameOk returns a tuple with the TickerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetTickerNameOk() (*string, bool) {
	if o == nil || IsNil(o.TickerName) {
		return nil, false
	}
	return o.TickerName, true
}

// HasTickerName returns a boolean if a field has been set.
func (o *AddAlertRequest) HasTickerName() bool {
	if o != nil && !IsNil(o.TickerName) {
		return true
	}

	return false
}

// SetTickerName gets a reference to the given string and assigns it to the TickerName field.
func (o *AddAlertRequest) SetTickerName(v string) {
	o.TickerName = &v
}

// GetTickerSymbol returns the TickerSymbol field value if set, zero value otherwise.
func (o *AddAlertRequest) GetTickerSymbol() string {
	if o == nil || IsNil(o.TickerSymbol) {
		var ret string
		return ret
	}
	return *o.TickerSymbol
}

// GetTickerSymbolOk returns a tuple with the TickerSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetTickerSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.TickerSymbol) {
		return nil, false
	}
	return o.TickerSymbol, true
}

// HasTickerSymbol returns a boolean if a field has been set.
func (o *AddAlertRequest) HasTickerSymbol() bool {
	if o != nil && !IsNil(o.TickerSymbol) {
		return true
	}

	return false
}

// SetTickerSymbol gets a reference to the given string and assigns it to the TickerSymbol field.
func (o *AddAlertRequest) SetTickerSymbol(v string) {
	o.TickerSymbol = &v
}

// GetTickerType returns the TickerType field value if set, zero value otherwise.
func (o *AddAlertRequest) GetTickerType() string {
	if o == nil || IsNil(o.TickerType) {
		var ret string
		return ret
	}
	return *o.TickerType
}

// GetTickerTypeOk returns a tuple with the TickerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetTickerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TickerType) {
		return nil, false
	}
	return o.TickerType, true
}

// HasTickerType returns a boolean if a field has been set.
func (o *AddAlertRequest) HasTickerType() bool {
	if o != nil && !IsNil(o.TickerType) {
		return true
	}

	return false
}

// SetTickerType gets a reference to the given string and assigns it to the TickerType field.
func (o *AddAlertRequest) SetTickerType(v string) {
	o.TickerType = &v
}

// GetTinyName returns the TinyName field value if set, zero value otherwise.
func (o *AddAlertRequest) GetTinyName() string {
	if o == nil || IsNil(o.TinyName) {
		var ret string
		return ret
	}
	return *o.TinyName
}

// GetTinyNameOk returns a tuple with the TinyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetTinyNameOk() (*string, bool) {
	if o == nil || IsNil(o.TinyName) {
		return nil, false
	}
	return o.TinyName, true
}

// HasTinyName returns a boolean if a field has been set.
func (o *AddAlertRequest) HasTinyName() bool {
	if o != nil && !IsNil(o.TinyName) {
		return true
	}

	return false
}

// SetTinyName gets a reference to the given string and assigns it to the TinyName field.
func (o *AddAlertRequest) SetTinyName(v string) {
	o.TinyName = &v
}

// GetWarningInput returns the WarningInput field value if set, zero value otherwise.
func (o *AddAlertRequest) GetWarningInput() AddAlertRequestWarningInput {
	if o == nil || IsNil(o.WarningInput) {
		var ret AddAlertRequestWarningInput
		return ret
	}
	return *o.WarningInput
}

// GetWarningInputOk returns a tuple with the WarningInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAlertRequest) GetWarningInputOk() (*AddAlertRequestWarningInput, bool) {
	if o == nil || IsNil(o.WarningInput) {
		return nil, false
	}
	return o.WarningInput, true
}

// HasWarningInput returns a boolean if a field has been set.
func (o *AddAlertRequest) HasWarningInput() bool {
	if o != nil && !IsNil(o.WarningInput) {
		return true
	}

	return false
}

// SetWarningInput gets a reference to the given AddAlertRequestWarningInput and assigns it to the WarningInput field.
func (o *AddAlertRequest) SetWarningInput(v AddAlertRequestWarningInput) {
	o.WarningInput = &v
}

func (o AddAlertRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddAlertRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisExchangeCode) {
		toSerialize["disExchangeCode"] = o.DisExchangeCode
	}
	if !IsNil(o.DisSymbol) {
		toSerialize["disSymbol"] = o.DisSymbol
	}
	if !IsNil(o.EventWarningInput) {
		toSerialize["eventWarningInput"] = o.EventWarningInput
	}
	if !IsNil(o.ExchangeCode) {
		toSerialize["exchangeCode"] = o.ExchangeCode
	}
	if !IsNil(o.RegionId) {
		toSerialize["regionId"] = o.RegionId
	}
	if !IsNil(o.ShowCode) {
		toSerialize["showCode"] = o.ShowCode
	}
	if !IsNil(o.TickerId) {
		toSerialize["tickerId"] = o.TickerId
	}
	if !IsNil(o.TickerName) {
		toSerialize["tickerName"] = o.TickerName
	}
	if !IsNil(o.TickerSymbol) {
		toSerialize["tickerSymbol"] = o.TickerSymbol
	}
	if !IsNil(o.TickerType) {
		toSerialize["tickerType"] = o.TickerType
	}
	if !IsNil(o.TinyName) {
		toSerialize["tinyName"] = o.TinyName
	}
	if !IsNil(o.WarningInput) {
		toSerialize["warningInput"] = o.WarningInput
	}
	return toSerialize, nil
}

type NullableAddAlertRequest struct {
	value *AddAlertRequest
	isSet bool
}

func (v NullableAddAlertRequest) Get() *AddAlertRequest {
	return v.value
}

func (v *NullableAddAlertRequest) Set(val *AddAlertRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAlertRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAlertRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAlertRequest(val *AddAlertRequest) *NullableAddAlertRequest {
	return &NullableAddAlertRequest{value: val, isSet: true}
}

func (v NullableAddAlertRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAlertRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


