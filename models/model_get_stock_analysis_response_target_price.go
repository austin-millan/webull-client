/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetStockAnalysisResponseTargetPrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetStockAnalysisResponseTargetPrice{}

// GetStockAnalysisResponseTargetPrice struct for GetStockAnalysisResponseTargetPrice
type GetStockAnalysisResponseTargetPrice struct {
	Current *string `json:"current,omitempty"`
	High *string `json:"high,omitempty"`
	Low *string `json:"low,omitempty"`
	Mean *string `json:"mean,omitempty"`
}

// NewGetStockAnalysisResponseTargetPrice instantiates a new GetStockAnalysisResponseTargetPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStockAnalysisResponseTargetPrice() *GetStockAnalysisResponseTargetPrice {
	this := GetStockAnalysisResponseTargetPrice{}
	return &this
}

// NewGetStockAnalysisResponseTargetPriceWithDefaults instantiates a new GetStockAnalysisResponseTargetPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStockAnalysisResponseTargetPriceWithDefaults() *GetStockAnalysisResponseTargetPrice {
	this := GetStockAnalysisResponseTargetPrice{}
	return &this
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *GetStockAnalysisResponseTargetPrice) GetCurrent() string {
	if o == nil || IsNil(o.Current) {
		var ret string
		return ret
	}
	return *o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockAnalysisResponseTargetPrice) GetCurrentOk() (*string, bool) {
	if o == nil || IsNil(o.Current) {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *GetStockAnalysisResponseTargetPrice) HasCurrent() bool {
	if o != nil && !IsNil(o.Current) {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given string and assigns it to the Current field.
func (o *GetStockAnalysisResponseTargetPrice) SetCurrent(v string) {
	o.Current = &v
}

// GetHigh returns the High field value if set, zero value otherwise.
func (o *GetStockAnalysisResponseTargetPrice) GetHigh() string {
	if o == nil || IsNil(o.High) {
		var ret string
		return ret
	}
	return *o.High
}

// GetHighOk returns a tuple with the High field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockAnalysisResponseTargetPrice) GetHighOk() (*string, bool) {
	if o == nil || IsNil(o.High) {
		return nil, false
	}
	return o.High, true
}

// HasHigh returns a boolean if a field has been set.
func (o *GetStockAnalysisResponseTargetPrice) HasHigh() bool {
	if o != nil && !IsNil(o.High) {
		return true
	}

	return false
}

// SetHigh gets a reference to the given string and assigns it to the High field.
func (o *GetStockAnalysisResponseTargetPrice) SetHigh(v string) {
	o.High = &v
}

// GetLow returns the Low field value if set, zero value otherwise.
func (o *GetStockAnalysisResponseTargetPrice) GetLow() string {
	if o == nil || IsNil(o.Low) {
		var ret string
		return ret
	}
	return *o.Low
}

// GetLowOk returns a tuple with the Low field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockAnalysisResponseTargetPrice) GetLowOk() (*string, bool) {
	if o == nil || IsNil(o.Low) {
		return nil, false
	}
	return o.Low, true
}

// HasLow returns a boolean if a field has been set.
func (o *GetStockAnalysisResponseTargetPrice) HasLow() bool {
	if o != nil && !IsNil(o.Low) {
		return true
	}

	return false
}

// SetLow gets a reference to the given string and assigns it to the Low field.
func (o *GetStockAnalysisResponseTargetPrice) SetLow(v string) {
	o.Low = &v
}

// GetMean returns the Mean field value if set, zero value otherwise.
func (o *GetStockAnalysisResponseTargetPrice) GetMean() string {
	if o == nil || IsNil(o.Mean) {
		var ret string
		return ret
	}
	return *o.Mean
}

// GetMeanOk returns a tuple with the Mean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStockAnalysisResponseTargetPrice) GetMeanOk() (*string, bool) {
	if o == nil || IsNil(o.Mean) {
		return nil, false
	}
	return o.Mean, true
}

// HasMean returns a boolean if a field has been set.
func (o *GetStockAnalysisResponseTargetPrice) HasMean() bool {
	if o != nil && !IsNil(o.Mean) {
		return true
	}

	return false
}

// SetMean gets a reference to the given string and assigns it to the Mean field.
func (o *GetStockAnalysisResponseTargetPrice) SetMean(v string) {
	o.Mean = &v
}

func (o GetStockAnalysisResponseTargetPrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetStockAnalysisResponseTargetPrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Current) {
		toSerialize["current"] = o.Current
	}
	if !IsNil(o.High) {
		toSerialize["high"] = o.High
	}
	if !IsNil(o.Low) {
		toSerialize["low"] = o.Low
	}
	if !IsNil(o.Mean) {
		toSerialize["mean"] = o.Mean
	}
	return toSerialize, nil
}

type NullableGetStockAnalysisResponseTargetPrice struct {
	value *GetStockAnalysisResponseTargetPrice
	isSet bool
}

func (v NullableGetStockAnalysisResponseTargetPrice) Get() *GetStockAnalysisResponseTargetPrice {
	return v.value
}

func (v *NullableGetStockAnalysisResponseTargetPrice) Set(val *GetStockAnalysisResponseTargetPrice) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStockAnalysisResponseTargetPrice) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStockAnalysisResponseTargetPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStockAnalysisResponseTargetPrice(val *GetStockAnalysisResponseTargetPrice) *NullableGetStockAnalysisResponseTargetPrice {
	return &NullableGetStockAnalysisResponseTargetPrice{value: val, isSet: true}
}

func (v NullableGetStockAnalysisResponseTargetPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStockAnalysisResponseTargetPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


