/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetAlertsResponseDataInnerTickerWarning type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAlertsResponseDataInnerTickerWarning{}

// GetAlertsResponseDataInnerTickerWarning struct for GetAlertsResponseDataInnerTickerWarning
type GetAlertsResponseDataInnerTickerWarning struct {
	BizTimestamp *float32 `json:"bizTimestamp,omitempty"`
	Del *bool `json:"del,omitempty"`
	DisExchangeCode *string `json:"disExchangeCode,omitempty"`
	DisSymbol *string `json:"disSymbol,omitempty"`
	ExchangeCode *string `json:"exchangeCode,omitempty"`
	ExchangeTrade *bool `json:"exchangeTrade,omitempty"`
	RegionId *int32 `json:"regionId,omitempty"`
	Rules []GetAlertsResponseDataInnerTickerWarningRulesInner `json:"rules,omitempty"`
	ShowCode *string `json:"showCode,omitempty"`
	TickerId *int32 `json:"tickerId,omitempty"`
	TickerName *string `json:"tickerName,omitempty"`
	TickerSymbol *string `json:"tickerSymbol,omitempty"`
	TickerType *int32 `json:"tickerType,omitempty"`
	TinyName *string `json:"tinyName,omitempty"`
	UpdateTime *string `json:"updateTime,omitempty"`
	WarningFrequency *int32 `json:"warningFrequency,omitempty"`
	WarningInterval *int32 `json:"warningInterval,omitempty"`
	WarningMode *int32 `json:"warningMode,omitempty"`
}

// NewGetAlertsResponseDataInnerTickerWarning instantiates a new GetAlertsResponseDataInnerTickerWarning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAlertsResponseDataInnerTickerWarning() *GetAlertsResponseDataInnerTickerWarning {
	this := GetAlertsResponseDataInnerTickerWarning{}
	return &this
}

// NewGetAlertsResponseDataInnerTickerWarningWithDefaults instantiates a new GetAlertsResponseDataInnerTickerWarning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAlertsResponseDataInnerTickerWarningWithDefaults() *GetAlertsResponseDataInnerTickerWarning {
	this := GetAlertsResponseDataInnerTickerWarning{}
	return &this
}

// GetBizTimestamp returns the BizTimestamp field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetBizTimestamp() float32 {
	if o == nil || IsNil(o.BizTimestamp) {
		var ret float32
		return ret
	}
	return *o.BizTimestamp
}

// GetBizTimestampOk returns a tuple with the BizTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetBizTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.BizTimestamp) {
		return nil, false
	}
	return o.BizTimestamp, true
}

// HasBizTimestamp returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasBizTimestamp() bool {
	if o != nil && !IsNil(o.BizTimestamp) {
		return true
	}

	return false
}

// SetBizTimestamp gets a reference to the given float32 and assigns it to the BizTimestamp field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetBizTimestamp(v float32) {
	o.BizTimestamp = &v
}

// GetDel returns the Del field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetDel() bool {
	if o == nil || IsNil(o.Del) {
		var ret bool
		return ret
	}
	return *o.Del
}

// GetDelOk returns a tuple with the Del field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetDelOk() (*bool, bool) {
	if o == nil || IsNil(o.Del) {
		return nil, false
	}
	return o.Del, true
}

// HasDel returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasDel() bool {
	if o != nil && !IsNil(o.Del) {
		return true
	}

	return false
}

// SetDel gets a reference to the given bool and assigns it to the Del field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetDel(v bool) {
	o.Del = &v
}

// GetDisExchangeCode returns the DisExchangeCode field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetDisExchangeCode() string {
	if o == nil || IsNil(o.DisExchangeCode) {
		var ret string
		return ret
	}
	return *o.DisExchangeCode
}

// GetDisExchangeCodeOk returns a tuple with the DisExchangeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetDisExchangeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DisExchangeCode) {
		return nil, false
	}
	return o.DisExchangeCode, true
}

// HasDisExchangeCode returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasDisExchangeCode() bool {
	if o != nil && !IsNil(o.DisExchangeCode) {
		return true
	}

	return false
}

// SetDisExchangeCode gets a reference to the given string and assigns it to the DisExchangeCode field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetDisExchangeCode(v string) {
	o.DisExchangeCode = &v
}

// GetDisSymbol returns the DisSymbol field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetDisSymbol() string {
	if o == nil || IsNil(o.DisSymbol) {
		var ret string
		return ret
	}
	return *o.DisSymbol
}

// GetDisSymbolOk returns a tuple with the DisSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetDisSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.DisSymbol) {
		return nil, false
	}
	return o.DisSymbol, true
}

// HasDisSymbol returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasDisSymbol() bool {
	if o != nil && !IsNil(o.DisSymbol) {
		return true
	}

	return false
}

// SetDisSymbol gets a reference to the given string and assigns it to the DisSymbol field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetDisSymbol(v string) {
	o.DisSymbol = &v
}

// GetExchangeCode returns the ExchangeCode field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetExchangeCode() string {
	if o == nil || IsNil(o.ExchangeCode) {
		var ret string
		return ret
	}
	return *o.ExchangeCode
}

// GetExchangeCodeOk returns a tuple with the ExchangeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetExchangeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeCode) {
		return nil, false
	}
	return o.ExchangeCode, true
}

// HasExchangeCode returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasExchangeCode() bool {
	if o != nil && !IsNil(o.ExchangeCode) {
		return true
	}

	return false
}

// SetExchangeCode gets a reference to the given string and assigns it to the ExchangeCode field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetExchangeCode(v string) {
	o.ExchangeCode = &v
}

// GetExchangeTrade returns the ExchangeTrade field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetExchangeTrade() bool {
	if o == nil || IsNil(o.ExchangeTrade) {
		var ret bool
		return ret
	}
	return *o.ExchangeTrade
}

// GetExchangeTradeOk returns a tuple with the ExchangeTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetExchangeTradeOk() (*bool, bool) {
	if o == nil || IsNil(o.ExchangeTrade) {
		return nil, false
	}
	return o.ExchangeTrade, true
}

// HasExchangeTrade returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasExchangeTrade() bool {
	if o != nil && !IsNil(o.ExchangeTrade) {
		return true
	}

	return false
}

// SetExchangeTrade gets a reference to the given bool and assigns it to the ExchangeTrade field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetExchangeTrade(v bool) {
	o.ExchangeTrade = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetRegionId() int32 {
	if o == nil || IsNil(o.RegionId) {
		var ret int32
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetRegionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RegionId) {
		return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasRegionId() bool {
	if o != nil && !IsNil(o.RegionId) {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given int32 and assigns it to the RegionId field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetRegionId(v int32) {
	o.RegionId = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetRules() []GetAlertsResponseDataInnerTickerWarningRulesInner {
	if o == nil || IsNil(o.Rules) {
		var ret []GetAlertsResponseDataInnerTickerWarningRulesInner
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetRulesOk() ([]GetAlertsResponseDataInnerTickerWarningRulesInner, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []GetAlertsResponseDataInnerTickerWarningRulesInner and assigns it to the Rules field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetRules(v []GetAlertsResponseDataInnerTickerWarningRulesInner) {
	o.Rules = v
}

// GetShowCode returns the ShowCode field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetShowCode() string {
	if o == nil || IsNil(o.ShowCode) {
		var ret string
		return ret
	}
	return *o.ShowCode
}

// GetShowCodeOk returns a tuple with the ShowCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetShowCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ShowCode) {
		return nil, false
	}
	return o.ShowCode, true
}

// HasShowCode returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasShowCode() bool {
	if o != nil && !IsNil(o.ShowCode) {
		return true
	}

	return false
}

// SetShowCode gets a reference to the given string and assigns it to the ShowCode field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetShowCode(v string) {
	o.ShowCode = &v
}

// GetTickerId returns the TickerId field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetTickerId() int32 {
	if o == nil || IsNil(o.TickerId) {
		var ret int32
		return ret
	}
	return *o.TickerId
}

// GetTickerIdOk returns a tuple with the TickerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetTickerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TickerId) {
		return nil, false
	}
	return o.TickerId, true
}

// HasTickerId returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasTickerId() bool {
	if o != nil && !IsNil(o.TickerId) {
		return true
	}

	return false
}

// SetTickerId gets a reference to the given int32 and assigns it to the TickerId field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetTickerId(v int32) {
	o.TickerId = &v
}

// GetTickerName returns the TickerName field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetTickerName() string {
	if o == nil || IsNil(o.TickerName) {
		var ret string
		return ret
	}
	return *o.TickerName
}

// GetTickerNameOk returns a tuple with the TickerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetTickerNameOk() (*string, bool) {
	if o == nil || IsNil(o.TickerName) {
		return nil, false
	}
	return o.TickerName, true
}

// HasTickerName returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasTickerName() bool {
	if o != nil && !IsNil(o.TickerName) {
		return true
	}

	return false
}

// SetTickerName gets a reference to the given string and assigns it to the TickerName field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetTickerName(v string) {
	o.TickerName = &v
}

// GetTickerSymbol returns the TickerSymbol field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetTickerSymbol() string {
	if o == nil || IsNil(o.TickerSymbol) {
		var ret string
		return ret
	}
	return *o.TickerSymbol
}

// GetTickerSymbolOk returns a tuple with the TickerSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetTickerSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.TickerSymbol) {
		return nil, false
	}
	return o.TickerSymbol, true
}

// HasTickerSymbol returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasTickerSymbol() bool {
	if o != nil && !IsNil(o.TickerSymbol) {
		return true
	}

	return false
}

// SetTickerSymbol gets a reference to the given string and assigns it to the TickerSymbol field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetTickerSymbol(v string) {
	o.TickerSymbol = &v
}

// GetTickerType returns the TickerType field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetTickerType() int32 {
	if o == nil || IsNil(o.TickerType) {
		var ret int32
		return ret
	}
	return *o.TickerType
}

// GetTickerTypeOk returns a tuple with the TickerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetTickerTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.TickerType) {
		return nil, false
	}
	return o.TickerType, true
}

// HasTickerType returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasTickerType() bool {
	if o != nil && !IsNil(o.TickerType) {
		return true
	}

	return false
}

// SetTickerType gets a reference to the given int32 and assigns it to the TickerType field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetTickerType(v int32) {
	o.TickerType = &v
}

// GetTinyName returns the TinyName field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetTinyName() string {
	if o == nil || IsNil(o.TinyName) {
		var ret string
		return ret
	}
	return *o.TinyName
}

// GetTinyNameOk returns a tuple with the TinyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetTinyNameOk() (*string, bool) {
	if o == nil || IsNil(o.TinyName) {
		return nil, false
	}
	return o.TinyName, true
}

// HasTinyName returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasTinyName() bool {
	if o != nil && !IsNil(o.TinyName) {
		return true
	}

	return false
}

// SetTinyName gets a reference to the given string and assigns it to the TinyName field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetTinyName(v string) {
	o.TinyName = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetWarningFrequency returns the WarningFrequency field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetWarningFrequency() int32 {
	if o == nil || IsNil(o.WarningFrequency) {
		var ret int32
		return ret
	}
	return *o.WarningFrequency
}

// GetWarningFrequencyOk returns a tuple with the WarningFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetWarningFrequencyOk() (*int32, bool) {
	if o == nil || IsNil(o.WarningFrequency) {
		return nil, false
	}
	return o.WarningFrequency, true
}

// HasWarningFrequency returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasWarningFrequency() bool {
	if o != nil && !IsNil(o.WarningFrequency) {
		return true
	}

	return false
}

// SetWarningFrequency gets a reference to the given int32 and assigns it to the WarningFrequency field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetWarningFrequency(v int32) {
	o.WarningFrequency = &v
}

// GetWarningInterval returns the WarningInterval field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetWarningInterval() int32 {
	if o == nil || IsNil(o.WarningInterval) {
		var ret int32
		return ret
	}
	return *o.WarningInterval
}

// GetWarningIntervalOk returns a tuple with the WarningInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetWarningIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.WarningInterval) {
		return nil, false
	}
	return o.WarningInterval, true
}

// HasWarningInterval returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasWarningInterval() bool {
	if o != nil && !IsNil(o.WarningInterval) {
		return true
	}

	return false
}

// SetWarningInterval gets a reference to the given int32 and assigns it to the WarningInterval field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetWarningInterval(v int32) {
	o.WarningInterval = &v
}

// GetWarningMode returns the WarningMode field value if set, zero value otherwise.
func (o *GetAlertsResponseDataInnerTickerWarning) GetWarningMode() int32 {
	if o == nil || IsNil(o.WarningMode) {
		var ret int32
		return ret
	}
	return *o.WarningMode
}

// GetWarningModeOk returns a tuple with the WarningMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) GetWarningModeOk() (*int32, bool) {
	if o == nil || IsNil(o.WarningMode) {
		return nil, false
	}
	return o.WarningMode, true
}

// HasWarningMode returns a boolean if a field has been set.
func (o *GetAlertsResponseDataInnerTickerWarning) HasWarningMode() bool {
	if o != nil && !IsNil(o.WarningMode) {
		return true
	}

	return false
}

// SetWarningMode gets a reference to the given int32 and assigns it to the WarningMode field.
func (o *GetAlertsResponseDataInnerTickerWarning) SetWarningMode(v int32) {
	o.WarningMode = &v
}

func (o GetAlertsResponseDataInnerTickerWarning) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAlertsResponseDataInnerTickerWarning) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BizTimestamp) {
		toSerialize["bizTimestamp"] = o.BizTimestamp
	}
	if !IsNil(o.Del) {
		toSerialize["del"] = o.Del
	}
	if !IsNil(o.DisExchangeCode) {
		toSerialize["disExchangeCode"] = o.DisExchangeCode
	}
	if !IsNil(o.DisSymbol) {
		toSerialize["disSymbol"] = o.DisSymbol
	}
	if !IsNil(o.ExchangeCode) {
		toSerialize["exchangeCode"] = o.ExchangeCode
	}
	if !IsNil(o.ExchangeTrade) {
		toSerialize["exchangeTrade"] = o.ExchangeTrade
	}
	if !IsNil(o.RegionId) {
		toSerialize["regionId"] = o.RegionId
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	if !IsNil(o.ShowCode) {
		toSerialize["showCode"] = o.ShowCode
	}
	if !IsNil(o.TickerId) {
		toSerialize["tickerId"] = o.TickerId
	}
	if !IsNil(o.TickerName) {
		toSerialize["tickerName"] = o.TickerName
	}
	if !IsNil(o.TickerSymbol) {
		toSerialize["tickerSymbol"] = o.TickerSymbol
	}
	if !IsNil(o.TickerType) {
		toSerialize["tickerType"] = o.TickerType
	}
	if !IsNil(o.TinyName) {
		toSerialize["tinyName"] = o.TinyName
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if !IsNil(o.WarningFrequency) {
		toSerialize["warningFrequency"] = o.WarningFrequency
	}
	if !IsNil(o.WarningInterval) {
		toSerialize["warningInterval"] = o.WarningInterval
	}
	if !IsNil(o.WarningMode) {
		toSerialize["warningMode"] = o.WarningMode
	}
	return toSerialize, nil
}

type NullableGetAlertsResponseDataInnerTickerWarning struct {
	value *GetAlertsResponseDataInnerTickerWarning
	isSet bool
}

func (v NullableGetAlertsResponseDataInnerTickerWarning) Get() *GetAlertsResponseDataInnerTickerWarning {
	return v.value
}

func (v *NullableGetAlertsResponseDataInnerTickerWarning) Set(val *GetAlertsResponseDataInnerTickerWarning) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAlertsResponseDataInnerTickerWarning) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAlertsResponseDataInnerTickerWarning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAlertsResponseDataInnerTickerWarning(val *GetAlertsResponseDataInnerTickerWarning) *NullableGetAlertsResponseDataInnerTickerWarning {
	return &NullableGetAlertsResponseDataInnerTickerWarning{value: val, isSet: true}
}

func (v NullableGetAlertsResponseDataInnerTickerWarning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAlertsResponseDataInnerTickerWarning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


