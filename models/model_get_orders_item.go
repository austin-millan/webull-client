/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetOrdersItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrdersItem{}

// GetOrdersItem struct for GetOrdersItem
type GetOrdersItem struct {
	ComboId *string `json:"comboId,omitempty"`
	ComboTickerType *string `json:"comboTickerType,omitempty"`
	ComboType *string `json:"comboType,omitempty"`
	Orders []GetOrdersItemOrdersInner `json:"orders,omitempty"`
	OutsideRegularTradingHour *bool `json:"outsideRegularTradingHour,omitempty"`
}

// NewGetOrdersItem instantiates a new GetOrdersItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrdersItem() *GetOrdersItem {
	this := GetOrdersItem{}
	return &this
}

// NewGetOrdersItemWithDefaults instantiates a new GetOrdersItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrdersItemWithDefaults() *GetOrdersItem {
	this := GetOrdersItem{}
	return &this
}

// GetComboId returns the ComboId field value if set, zero value otherwise.
func (o *GetOrdersItem) GetComboId() string {
	if o == nil || IsNil(o.ComboId) {
		var ret string
		return ret
	}
	return *o.ComboId
}

// GetComboIdOk returns a tuple with the ComboId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItem) GetComboIdOk() (*string, bool) {
	if o == nil || IsNil(o.ComboId) {
		return nil, false
	}
	return o.ComboId, true
}

// HasComboId returns a boolean if a field has been set.
func (o *GetOrdersItem) HasComboId() bool {
	if o != nil && !IsNil(o.ComboId) {
		return true
	}

	return false
}

// SetComboId gets a reference to the given string and assigns it to the ComboId field.
func (o *GetOrdersItem) SetComboId(v string) {
	o.ComboId = &v
}

// GetComboTickerType returns the ComboTickerType field value if set, zero value otherwise.
func (o *GetOrdersItem) GetComboTickerType() string {
	if o == nil || IsNil(o.ComboTickerType) {
		var ret string
		return ret
	}
	return *o.ComboTickerType
}

// GetComboTickerTypeOk returns a tuple with the ComboTickerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItem) GetComboTickerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ComboTickerType) {
		return nil, false
	}
	return o.ComboTickerType, true
}

// HasComboTickerType returns a boolean if a field has been set.
func (o *GetOrdersItem) HasComboTickerType() bool {
	if o != nil && !IsNil(o.ComboTickerType) {
		return true
	}

	return false
}

// SetComboTickerType gets a reference to the given string and assigns it to the ComboTickerType field.
func (o *GetOrdersItem) SetComboTickerType(v string) {
	o.ComboTickerType = &v
}

// GetComboType returns the ComboType field value if set, zero value otherwise.
func (o *GetOrdersItem) GetComboType() string {
	if o == nil || IsNil(o.ComboType) {
		var ret string
		return ret
	}
	return *o.ComboType
}

// GetComboTypeOk returns a tuple with the ComboType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItem) GetComboTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ComboType) {
		return nil, false
	}
	return o.ComboType, true
}

// HasComboType returns a boolean if a field has been set.
func (o *GetOrdersItem) HasComboType() bool {
	if o != nil && !IsNil(o.ComboType) {
		return true
	}

	return false
}

// SetComboType gets a reference to the given string and assigns it to the ComboType field.
func (o *GetOrdersItem) SetComboType(v string) {
	o.ComboType = &v
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *GetOrdersItem) GetOrders() []GetOrdersItemOrdersInner {
	if o == nil || IsNil(o.Orders) {
		var ret []GetOrdersItemOrdersInner
		return ret
	}
	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItem) GetOrdersOk() ([]GetOrdersItemOrdersInner, bool) {
	if o == nil || IsNil(o.Orders) {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *GetOrdersItem) HasOrders() bool {
	if o != nil && !IsNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []GetOrdersItemOrdersInner and assigns it to the Orders field.
func (o *GetOrdersItem) SetOrders(v []GetOrdersItemOrdersInner) {
	o.Orders = v
}

// GetOutsideRegularTradingHour returns the OutsideRegularTradingHour field value if set, zero value otherwise.
func (o *GetOrdersItem) GetOutsideRegularTradingHour() bool {
	if o == nil || IsNil(o.OutsideRegularTradingHour) {
		var ret bool
		return ret
	}
	return *o.OutsideRegularTradingHour
}

// GetOutsideRegularTradingHourOk returns a tuple with the OutsideRegularTradingHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersItem) GetOutsideRegularTradingHourOk() (*bool, bool) {
	if o == nil || IsNil(o.OutsideRegularTradingHour) {
		return nil, false
	}
	return o.OutsideRegularTradingHour, true
}

// HasOutsideRegularTradingHour returns a boolean if a field has been set.
func (o *GetOrdersItem) HasOutsideRegularTradingHour() bool {
	if o != nil && !IsNil(o.OutsideRegularTradingHour) {
		return true
	}

	return false
}

// SetOutsideRegularTradingHour gets a reference to the given bool and assigns it to the OutsideRegularTradingHour field.
func (o *GetOrdersItem) SetOutsideRegularTradingHour(v bool) {
	o.OutsideRegularTradingHour = &v
}

func (o GetOrdersItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrdersItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComboId) {
		toSerialize["comboId"] = o.ComboId
	}
	if !IsNil(o.ComboTickerType) {
		toSerialize["comboTickerType"] = o.ComboTickerType
	}
	if !IsNil(o.ComboType) {
		toSerialize["comboType"] = o.ComboType
	}
	if !IsNil(o.Orders) {
		toSerialize["orders"] = o.Orders
	}
	if !IsNil(o.OutsideRegularTradingHour) {
		toSerialize["outsideRegularTradingHour"] = o.OutsideRegularTradingHour
	}
	return toSerialize, nil
}

type NullableGetOrdersItem struct {
	value *GetOrdersItem
	isSet bool
}

func (v NullableGetOrdersItem) Get() *GetOrdersItem {
	return v.value
}

func (v *NullableGetOrdersItem) Set(val *GetOrdersItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrdersItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrdersItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrdersItem(val *GetOrdersItem) *NullableGetOrdersItem {
	return &NullableGetOrdersItem{value: val, isSet: true}
}

func (v NullableGetOrdersItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrdersItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


