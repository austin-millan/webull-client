/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetFundamentalsResponseSimpleStatementInnerSingle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFundamentalsResponseSimpleStatementInnerSingle{}

// GetFundamentalsResponseSimpleStatementInnerSingle struct for GetFundamentalsResponseSimpleStatementInnerSingle
type GetFundamentalsResponseSimpleStatementInnerSingle struct {
	CurrencyId *int32 `json:"currencyId,omitempty"`
	DilutedEps *string `json:"dilutedEps,omitempty"`
	GrossProfit *string `json:"grossProfit,omitempty"`
	NetIncomeAfterTax *string `json:"netIncomeAfterTax,omitempty"`
	OperatingIncome *string `json:"operatingIncome,omitempty"`
	ParentEarning *string `json:"parentEarning,omitempty"`
	ReportEndDate *string `json:"reportEndDate,omitempty"`
	Revenue *string `json:"revenue,omitempty"`
}

// NewGetFundamentalsResponseSimpleStatementInnerSingle instantiates a new GetFundamentalsResponseSimpleStatementInnerSingle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFundamentalsResponseSimpleStatementInnerSingle() *GetFundamentalsResponseSimpleStatementInnerSingle {
	this := GetFundamentalsResponseSimpleStatementInnerSingle{}
	return &this
}

// NewGetFundamentalsResponseSimpleStatementInnerSingleWithDefaults instantiates a new GetFundamentalsResponseSimpleStatementInnerSingle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFundamentalsResponseSimpleStatementInnerSingleWithDefaults() *GetFundamentalsResponseSimpleStatementInnerSingle {
	this := GetFundamentalsResponseSimpleStatementInnerSingle{}
	return &this
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetCurrencyId() int32 {
	if o == nil || IsNil(o.CurrencyId) {
		var ret int32
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetCurrencyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrencyId) {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) HasCurrencyId() bool {
	if o != nil && !IsNil(o.CurrencyId) {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given int32 and assigns it to the CurrencyId field.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) SetCurrencyId(v int32) {
	o.CurrencyId = &v
}

// GetDilutedEps returns the DilutedEps field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetDilutedEps() string {
	if o == nil || IsNil(o.DilutedEps) {
		var ret string
		return ret
	}
	return *o.DilutedEps
}

// GetDilutedEpsOk returns a tuple with the DilutedEps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetDilutedEpsOk() (*string, bool) {
	if o == nil || IsNil(o.DilutedEps) {
		return nil, false
	}
	return o.DilutedEps, true
}

// HasDilutedEps returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) HasDilutedEps() bool {
	if o != nil && !IsNil(o.DilutedEps) {
		return true
	}

	return false
}

// SetDilutedEps gets a reference to the given string and assigns it to the DilutedEps field.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) SetDilutedEps(v string) {
	o.DilutedEps = &v
}

// GetGrossProfit returns the GrossProfit field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetGrossProfit() string {
	if o == nil || IsNil(o.GrossProfit) {
		var ret string
		return ret
	}
	return *o.GrossProfit
}

// GetGrossProfitOk returns a tuple with the GrossProfit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetGrossProfitOk() (*string, bool) {
	if o == nil || IsNil(o.GrossProfit) {
		return nil, false
	}
	return o.GrossProfit, true
}

// HasGrossProfit returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) HasGrossProfit() bool {
	if o != nil && !IsNil(o.GrossProfit) {
		return true
	}

	return false
}

// SetGrossProfit gets a reference to the given string and assigns it to the GrossProfit field.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) SetGrossProfit(v string) {
	o.GrossProfit = &v
}

// GetNetIncomeAfterTax returns the NetIncomeAfterTax field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetNetIncomeAfterTax() string {
	if o == nil || IsNil(o.NetIncomeAfterTax) {
		var ret string
		return ret
	}
	return *o.NetIncomeAfterTax
}

// GetNetIncomeAfterTaxOk returns a tuple with the NetIncomeAfterTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetNetIncomeAfterTaxOk() (*string, bool) {
	if o == nil || IsNil(o.NetIncomeAfterTax) {
		return nil, false
	}
	return o.NetIncomeAfterTax, true
}

// HasNetIncomeAfterTax returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) HasNetIncomeAfterTax() bool {
	if o != nil && !IsNil(o.NetIncomeAfterTax) {
		return true
	}

	return false
}

// SetNetIncomeAfterTax gets a reference to the given string and assigns it to the NetIncomeAfterTax field.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) SetNetIncomeAfterTax(v string) {
	o.NetIncomeAfterTax = &v
}

// GetOperatingIncome returns the OperatingIncome field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetOperatingIncome() string {
	if o == nil || IsNil(o.OperatingIncome) {
		var ret string
		return ret
	}
	return *o.OperatingIncome
}

// GetOperatingIncomeOk returns a tuple with the OperatingIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetOperatingIncomeOk() (*string, bool) {
	if o == nil || IsNil(o.OperatingIncome) {
		return nil, false
	}
	return o.OperatingIncome, true
}

// HasOperatingIncome returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) HasOperatingIncome() bool {
	if o != nil && !IsNil(o.OperatingIncome) {
		return true
	}

	return false
}

// SetOperatingIncome gets a reference to the given string and assigns it to the OperatingIncome field.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) SetOperatingIncome(v string) {
	o.OperatingIncome = &v
}

// GetParentEarning returns the ParentEarning field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetParentEarning() string {
	if o == nil || IsNil(o.ParentEarning) {
		var ret string
		return ret
	}
	return *o.ParentEarning
}

// GetParentEarningOk returns a tuple with the ParentEarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetParentEarningOk() (*string, bool) {
	if o == nil || IsNil(o.ParentEarning) {
		return nil, false
	}
	return o.ParentEarning, true
}

// HasParentEarning returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) HasParentEarning() bool {
	if o != nil && !IsNil(o.ParentEarning) {
		return true
	}

	return false
}

// SetParentEarning gets a reference to the given string and assigns it to the ParentEarning field.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) SetParentEarning(v string) {
	o.ParentEarning = &v
}

// GetReportEndDate returns the ReportEndDate field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetReportEndDate() string {
	if o == nil || IsNil(o.ReportEndDate) {
		var ret string
		return ret
	}
	return *o.ReportEndDate
}

// GetReportEndDateOk returns a tuple with the ReportEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetReportEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReportEndDate) {
		return nil, false
	}
	return o.ReportEndDate, true
}

// HasReportEndDate returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) HasReportEndDate() bool {
	if o != nil && !IsNil(o.ReportEndDate) {
		return true
	}

	return false
}

// SetReportEndDate gets a reference to the given string and assigns it to the ReportEndDate field.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) SetReportEndDate(v string) {
	o.ReportEndDate = &v
}

// GetRevenue returns the Revenue field value if set, zero value otherwise.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetRevenue() string {
	if o == nil || IsNil(o.Revenue) {
		var ret string
		return ret
	}
	return *o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) GetRevenueOk() (*string, bool) {
	if o == nil || IsNil(o.Revenue) {
		return nil, false
	}
	return o.Revenue, true
}

// HasRevenue returns a boolean if a field has been set.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) HasRevenue() bool {
	if o != nil && !IsNil(o.Revenue) {
		return true
	}

	return false
}

// SetRevenue gets a reference to the given string and assigns it to the Revenue field.
func (o *GetFundamentalsResponseSimpleStatementInnerSingle) SetRevenue(v string) {
	o.Revenue = &v
}

func (o GetFundamentalsResponseSimpleStatementInnerSingle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFundamentalsResponseSimpleStatementInnerSingle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrencyId) {
		toSerialize["currencyId"] = o.CurrencyId
	}
	if !IsNil(o.DilutedEps) {
		toSerialize["dilutedEps"] = o.DilutedEps
	}
	if !IsNil(o.GrossProfit) {
		toSerialize["grossProfit"] = o.GrossProfit
	}
	if !IsNil(o.NetIncomeAfterTax) {
		toSerialize["netIncomeAfterTax"] = o.NetIncomeAfterTax
	}
	if !IsNil(o.OperatingIncome) {
		toSerialize["operatingIncome"] = o.OperatingIncome
	}
	if !IsNil(o.ParentEarning) {
		toSerialize["parentEarning"] = o.ParentEarning
	}
	if !IsNil(o.ReportEndDate) {
		toSerialize["reportEndDate"] = o.ReportEndDate
	}
	if !IsNil(o.Revenue) {
		toSerialize["revenue"] = o.Revenue
	}
	return toSerialize, nil
}

type NullableGetFundamentalsResponseSimpleStatementInnerSingle struct {
	value *GetFundamentalsResponseSimpleStatementInnerSingle
	isSet bool
}

func (v NullableGetFundamentalsResponseSimpleStatementInnerSingle) Get() *GetFundamentalsResponseSimpleStatementInnerSingle {
	return v.value
}

func (v *NullableGetFundamentalsResponseSimpleStatementInnerSingle) Set(val *GetFundamentalsResponseSimpleStatementInnerSingle) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFundamentalsResponseSimpleStatementInnerSingle) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFundamentalsResponseSimpleStatementInnerSingle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFundamentalsResponseSimpleStatementInnerSingle(val *GetFundamentalsResponseSimpleStatementInnerSingle) *NullableGetFundamentalsResponseSimpleStatementInnerSingle {
	return &NullableGetFundamentalsResponseSimpleStatementInnerSingle{value: val, isSet: true}
}

func (v NullableGetFundamentalsResponseSimpleStatementInnerSingle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFundamentalsResponseSimpleStatementInnerSingle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


