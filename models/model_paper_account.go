/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PaperAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaperAccount{}

// PaperAccount struct for PaperAccount
type PaperAccount struct {
	Currency *string `json:"currency,omitempty"`
	CurrencyId *int32 `json:"currencyId,omitempty"`
	Id *int32 `json:"id,omitempty"`
	OrderTypes []OrderType `json:"orderTypes,omitempty"`
	PaperId *int32 `json:"paperId,omitempty"`
	PaperName *string `json:"paperName,omitempty"`
	PaperTickerPoolCode *string `json:"paperTickerPoolCode,omitempty"`
	PaperType *int32 `json:"paperType,omitempty"`
	Status *int32 `json:"status,omitempty"`
	SupportOutsideRth *bool `json:"supportOutsideRth,omitempty"`
	TimeInForces []string `json:"timeInForces,omitempty"`
}

// NewPaperAccount instantiates a new PaperAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaperAccount() *PaperAccount {
	this := PaperAccount{}
	return &this
}

// NewPaperAccountWithDefaults instantiates a new PaperAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaperAccountWithDefaults() *PaperAccount {
	this := PaperAccount{}
	return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PaperAccount) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaperAccount) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PaperAccount) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PaperAccount) SetCurrency(v string) {
	o.Currency = &v
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *PaperAccount) GetCurrencyId() int32 {
	if o == nil || IsNil(o.CurrencyId) {
		var ret int32
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaperAccount) GetCurrencyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrencyId) {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *PaperAccount) HasCurrencyId() bool {
	if o != nil && !IsNil(o.CurrencyId) {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given int32 and assigns it to the CurrencyId field.
func (o *PaperAccount) SetCurrencyId(v int32) {
	o.CurrencyId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaperAccount) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaperAccount) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaperAccount) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PaperAccount) SetId(v int32) {
	o.Id = &v
}

// GetOrderTypes returns the OrderTypes field value if set, zero value otherwise.
func (o *PaperAccount) GetOrderTypes() []OrderType {
	if o == nil || IsNil(o.OrderTypes) {
		var ret []OrderType
		return ret
	}
	return o.OrderTypes
}

// GetOrderTypesOk returns a tuple with the OrderTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaperAccount) GetOrderTypesOk() ([]OrderType, bool) {
	if o == nil || IsNil(o.OrderTypes) {
		return nil, false
	}
	return o.OrderTypes, true
}

// HasOrderTypes returns a boolean if a field has been set.
func (o *PaperAccount) HasOrderTypes() bool {
	if o != nil && !IsNil(o.OrderTypes) {
		return true
	}

	return false
}

// SetOrderTypes gets a reference to the given []OrderType and assigns it to the OrderTypes field.
func (o *PaperAccount) SetOrderTypes(v []OrderType) {
	o.OrderTypes = v
}

// GetPaperId returns the PaperId field value if set, zero value otherwise.
func (o *PaperAccount) GetPaperId() int32 {
	if o == nil || IsNil(o.PaperId) {
		var ret int32
		return ret
	}
	return *o.PaperId
}

// GetPaperIdOk returns a tuple with the PaperId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaperAccount) GetPaperIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PaperId) {
		return nil, false
	}
	return o.PaperId, true
}

// HasPaperId returns a boolean if a field has been set.
func (o *PaperAccount) HasPaperId() bool {
	if o != nil && !IsNil(o.PaperId) {
		return true
	}

	return false
}

// SetPaperId gets a reference to the given int32 and assigns it to the PaperId field.
func (o *PaperAccount) SetPaperId(v int32) {
	o.PaperId = &v
}

// GetPaperName returns the PaperName field value if set, zero value otherwise.
func (o *PaperAccount) GetPaperName() string {
	if o == nil || IsNil(o.PaperName) {
		var ret string
		return ret
	}
	return *o.PaperName
}

// GetPaperNameOk returns a tuple with the PaperName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaperAccount) GetPaperNameOk() (*string, bool) {
	if o == nil || IsNil(o.PaperName) {
		return nil, false
	}
	return o.PaperName, true
}

// HasPaperName returns a boolean if a field has been set.
func (o *PaperAccount) HasPaperName() bool {
	if o != nil && !IsNil(o.PaperName) {
		return true
	}

	return false
}

// SetPaperName gets a reference to the given string and assigns it to the PaperName field.
func (o *PaperAccount) SetPaperName(v string) {
	o.PaperName = &v
}

// GetPaperTickerPoolCode returns the PaperTickerPoolCode field value if set, zero value otherwise.
func (o *PaperAccount) GetPaperTickerPoolCode() string {
	if o == nil || IsNil(o.PaperTickerPoolCode) {
		var ret string
		return ret
	}
	return *o.PaperTickerPoolCode
}

// GetPaperTickerPoolCodeOk returns a tuple with the PaperTickerPoolCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaperAccount) GetPaperTickerPoolCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PaperTickerPoolCode) {
		return nil, false
	}
	return o.PaperTickerPoolCode, true
}

// HasPaperTickerPoolCode returns a boolean if a field has been set.
func (o *PaperAccount) HasPaperTickerPoolCode() bool {
	if o != nil && !IsNil(o.PaperTickerPoolCode) {
		return true
	}

	return false
}

// SetPaperTickerPoolCode gets a reference to the given string and assigns it to the PaperTickerPoolCode field.
func (o *PaperAccount) SetPaperTickerPoolCode(v string) {
	o.PaperTickerPoolCode = &v
}

// GetPaperType returns the PaperType field value if set, zero value otherwise.
func (o *PaperAccount) GetPaperType() int32 {
	if o == nil || IsNil(o.PaperType) {
		var ret int32
		return ret
	}
	return *o.PaperType
}

// GetPaperTypeOk returns a tuple with the PaperType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaperAccount) GetPaperTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.PaperType) {
		return nil, false
	}
	return o.PaperType, true
}

// HasPaperType returns a boolean if a field has been set.
func (o *PaperAccount) HasPaperType() bool {
	if o != nil && !IsNil(o.PaperType) {
		return true
	}

	return false
}

// SetPaperType gets a reference to the given int32 and assigns it to the PaperType field.
func (o *PaperAccount) SetPaperType(v int32) {
	o.PaperType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaperAccount) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaperAccount) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaperAccount) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *PaperAccount) SetStatus(v int32) {
	o.Status = &v
}

// GetSupportOutsideRth returns the SupportOutsideRth field value if set, zero value otherwise.
func (o *PaperAccount) GetSupportOutsideRth() bool {
	if o == nil || IsNil(o.SupportOutsideRth) {
		var ret bool
		return ret
	}
	return *o.SupportOutsideRth
}

// GetSupportOutsideRthOk returns a tuple with the SupportOutsideRth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaperAccount) GetSupportOutsideRthOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportOutsideRth) {
		return nil, false
	}
	return o.SupportOutsideRth, true
}

// HasSupportOutsideRth returns a boolean if a field has been set.
func (o *PaperAccount) HasSupportOutsideRth() bool {
	if o != nil && !IsNil(o.SupportOutsideRth) {
		return true
	}

	return false
}

// SetSupportOutsideRth gets a reference to the given bool and assigns it to the SupportOutsideRth field.
func (o *PaperAccount) SetSupportOutsideRth(v bool) {
	o.SupportOutsideRth = &v
}

// GetTimeInForces returns the TimeInForces field value if set, zero value otherwise.
func (o *PaperAccount) GetTimeInForces() []string {
	if o == nil || IsNil(o.TimeInForces) {
		var ret []string
		return ret
	}
	return o.TimeInForces
}

// GetTimeInForcesOk returns a tuple with the TimeInForces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaperAccount) GetTimeInForcesOk() ([]string, bool) {
	if o == nil || IsNil(o.TimeInForces) {
		return nil, false
	}
	return o.TimeInForces, true
}

// HasTimeInForces returns a boolean if a field has been set.
func (o *PaperAccount) HasTimeInForces() bool {
	if o != nil && !IsNil(o.TimeInForces) {
		return true
	}

	return false
}

// SetTimeInForces gets a reference to the given []string and assigns it to the TimeInForces field.
func (o *PaperAccount) SetTimeInForces(v []string) {
	o.TimeInForces = v
}

func (o PaperAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaperAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.CurrencyId) {
		toSerialize["currencyId"] = o.CurrencyId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrderTypes) {
		toSerialize["orderTypes"] = o.OrderTypes
	}
	if !IsNil(o.PaperId) {
		toSerialize["paperId"] = o.PaperId
	}
	if !IsNil(o.PaperName) {
		toSerialize["paperName"] = o.PaperName
	}
	if !IsNil(o.PaperTickerPoolCode) {
		toSerialize["paperTickerPoolCode"] = o.PaperTickerPoolCode
	}
	if !IsNil(o.PaperType) {
		toSerialize["paperType"] = o.PaperType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SupportOutsideRth) {
		toSerialize["supportOutsideRth"] = o.SupportOutsideRth
	}
	if !IsNil(o.TimeInForces) {
		toSerialize["timeInForces"] = o.TimeInForces
	}
	return toSerialize, nil
}

type NullablePaperAccount struct {
	value *PaperAccount
	isSet bool
}

func (v NullablePaperAccount) Get() *PaperAccount {
	return v.value
}

func (v *NullablePaperAccount) Set(val *PaperAccount) {
	v.value = val
	v.isSet = true
}

func (v NullablePaperAccount) IsSet() bool {
	return v.isSet
}

func (v *NullablePaperAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaperAccount(val *PaperAccount) *NullablePaperAccount {
	return &NullablePaperAccount{value: val, isSet: true}
}

func (v NullablePaperAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaperAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


