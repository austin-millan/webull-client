/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountInfo{}

// AccountInfo struct for AccountInfo
type AccountInfo struct {
	AccountType *AccountType `json:"accountType,omitempty"`
	Currency *string `json:"currency,omitempty"`
	NetLiquidation *float32 `json:"netLiquidation,omitempty"`
	Pdt *bool `json:"pdt,omitempty"`
	UnrealizedProfitLoss *float32 `json:"unrealizedProfitLoss,omitempty"`
	UnrealizedProfitLossBase *float32 `json:"unrealizedProfitLossBase,omitempty"`
	Warning *bool `json:"warning,omitempty"`
}

// NewAccountInfo instantiates a new AccountInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountInfo() *AccountInfo {
	this := AccountInfo{}
	var accountType AccountType = _2
	this.AccountType = &accountType
	return &this
}

// NewAccountInfoWithDefaults instantiates a new AccountInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountInfoWithDefaults() *AccountInfo {
	this := AccountInfo{}
	var accountType AccountType = _2
	this.AccountType = &accountType
	return &this
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *AccountInfo) GetAccountType() AccountType {
	if o == nil || IsNil(o.AccountType) {
		var ret AccountType
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfo) GetAccountTypeOk() (*AccountType, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *AccountInfo) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given AccountType and assigns it to the AccountType field.
func (o *AccountInfo) SetAccountType(v AccountType) {
	o.AccountType = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *AccountInfo) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfo) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *AccountInfo) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *AccountInfo) SetCurrency(v string) {
	o.Currency = &v
}

// GetNetLiquidation returns the NetLiquidation field value if set, zero value otherwise.
func (o *AccountInfo) GetNetLiquidation() float32 {
	if o == nil || IsNil(o.NetLiquidation) {
		var ret float32
		return ret
	}
	return *o.NetLiquidation
}

// GetNetLiquidationOk returns a tuple with the NetLiquidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfo) GetNetLiquidationOk() (*float32, bool) {
	if o == nil || IsNil(o.NetLiquidation) {
		return nil, false
	}
	return o.NetLiquidation, true
}

// HasNetLiquidation returns a boolean if a field has been set.
func (o *AccountInfo) HasNetLiquidation() bool {
	if o != nil && !IsNil(o.NetLiquidation) {
		return true
	}

	return false
}

// SetNetLiquidation gets a reference to the given float32 and assigns it to the NetLiquidation field.
func (o *AccountInfo) SetNetLiquidation(v float32) {
	o.NetLiquidation = &v
}

// GetPdt returns the Pdt field value if set, zero value otherwise.
func (o *AccountInfo) GetPdt() bool {
	if o == nil || IsNil(o.Pdt) {
		var ret bool
		return ret
	}
	return *o.Pdt
}

// GetPdtOk returns a tuple with the Pdt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfo) GetPdtOk() (*bool, bool) {
	if o == nil || IsNil(o.Pdt) {
		return nil, false
	}
	return o.Pdt, true
}

// HasPdt returns a boolean if a field has been set.
func (o *AccountInfo) HasPdt() bool {
	if o != nil && !IsNil(o.Pdt) {
		return true
	}

	return false
}

// SetPdt gets a reference to the given bool and assigns it to the Pdt field.
func (o *AccountInfo) SetPdt(v bool) {
	o.Pdt = &v
}

// GetUnrealizedProfitLoss returns the UnrealizedProfitLoss field value if set, zero value otherwise.
func (o *AccountInfo) GetUnrealizedProfitLoss() float32 {
	if o == nil || IsNil(o.UnrealizedProfitLoss) {
		var ret float32
		return ret
	}
	return *o.UnrealizedProfitLoss
}

// GetUnrealizedProfitLossOk returns a tuple with the UnrealizedProfitLoss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfo) GetUnrealizedProfitLossOk() (*float32, bool) {
	if o == nil || IsNil(o.UnrealizedProfitLoss) {
		return nil, false
	}
	return o.UnrealizedProfitLoss, true
}

// HasUnrealizedProfitLoss returns a boolean if a field has been set.
func (o *AccountInfo) HasUnrealizedProfitLoss() bool {
	if o != nil && !IsNil(o.UnrealizedProfitLoss) {
		return true
	}

	return false
}

// SetUnrealizedProfitLoss gets a reference to the given float32 and assigns it to the UnrealizedProfitLoss field.
func (o *AccountInfo) SetUnrealizedProfitLoss(v float32) {
	o.UnrealizedProfitLoss = &v
}

// GetUnrealizedProfitLossBase returns the UnrealizedProfitLossBase field value if set, zero value otherwise.
func (o *AccountInfo) GetUnrealizedProfitLossBase() float32 {
	if o == nil || IsNil(o.UnrealizedProfitLossBase) {
		var ret float32
		return ret
	}
	return *o.UnrealizedProfitLossBase
}

// GetUnrealizedProfitLossBaseOk returns a tuple with the UnrealizedProfitLossBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfo) GetUnrealizedProfitLossBaseOk() (*float32, bool) {
	if o == nil || IsNil(o.UnrealizedProfitLossBase) {
		return nil, false
	}
	return o.UnrealizedProfitLossBase, true
}

// HasUnrealizedProfitLossBase returns a boolean if a field has been set.
func (o *AccountInfo) HasUnrealizedProfitLossBase() bool {
	if o != nil && !IsNil(o.UnrealizedProfitLossBase) {
		return true
	}

	return false
}

// SetUnrealizedProfitLossBase gets a reference to the given float32 and assigns it to the UnrealizedProfitLossBase field.
func (o *AccountInfo) SetUnrealizedProfitLossBase(v float32) {
	o.UnrealizedProfitLossBase = &v
}

// GetWarning returns the Warning field value if set, zero value otherwise.
func (o *AccountInfo) GetWarning() bool {
	if o == nil || IsNil(o.Warning) {
		var ret bool
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfo) GetWarningOk() (*bool, bool) {
	if o == nil || IsNil(o.Warning) {
		return nil, false
	}
	return o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *AccountInfo) HasWarning() bool {
	if o != nil && !IsNil(o.Warning) {
		return true
	}

	return false
}

// SetWarning gets a reference to the given bool and assigns it to the Warning field.
func (o *AccountInfo) SetWarning(v bool) {
	o.Warning = &v
}

func (o AccountInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountType) {
		toSerialize["accountType"] = o.AccountType
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.NetLiquidation) {
		toSerialize["netLiquidation"] = o.NetLiquidation
	}
	if !IsNil(o.Pdt) {
		toSerialize["pdt"] = o.Pdt
	}
	if !IsNil(o.UnrealizedProfitLoss) {
		toSerialize["unrealizedProfitLoss"] = o.UnrealizedProfitLoss
	}
	if !IsNil(o.UnrealizedProfitLossBase) {
		toSerialize["unrealizedProfitLossBase"] = o.UnrealizedProfitLossBase
	}
	if !IsNil(o.Warning) {
		toSerialize["warning"] = o.Warning
	}
	return toSerialize, nil
}

type NullableAccountInfo struct {
	value *AccountInfo
	isSet bool
}

func (v NullableAccountInfo) Get() *AccountInfo {
	return v.value
}

func (v *NullableAccountInfo) Set(val *AccountInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountInfo(val *AccountInfo) *NullableAccountInfo {
	return &NullableAccountInfo{value: val, isSet: true}
}

func (v NullableAccountInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


