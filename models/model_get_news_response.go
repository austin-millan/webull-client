/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetNewsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNewsResponse{}

// GetNewsResponse struct for GetNewsResponse
type GetNewsResponse struct {
	Items *GetNewsResponseItems `json:"items,omitempty"`
}

// NewGetNewsResponse instantiates a new GetNewsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNewsResponse() *GetNewsResponse {
	this := GetNewsResponse{}
	return &this
}

// NewGetNewsResponseWithDefaults instantiates a new GetNewsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNewsResponseWithDefaults() *GetNewsResponse {
	this := GetNewsResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *GetNewsResponse) GetItems() GetNewsResponseItems {
	if o == nil || IsNil(o.Items) {
		var ret GetNewsResponseItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNewsResponse) GetItemsOk() (*GetNewsResponseItems, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *GetNewsResponse) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given GetNewsResponseItems and assigns it to the Items field.
func (o *GetNewsResponse) SetItems(v GetNewsResponseItems) {
	o.Items = &v
}

func (o GetNewsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNewsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableGetNewsResponse struct {
	value *GetNewsResponse
	isSet bool
}

func (v NullableGetNewsResponse) Get() *GetNewsResponse {
	return v.value
}

func (v *NullableGetNewsResponse) Set(val *GetNewsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNewsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNewsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNewsResponse(val *GetNewsResponse) *NullableGetNewsResponse {
	return &NullableGetNewsResponse{value: val, isSet: true}
}

func (v NullableGetNewsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNewsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


