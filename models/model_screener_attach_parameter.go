/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ScreenerAttachParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScreenerAttachParameter{}

// ScreenerAttachParameter struct for ScreenerAttachParameter
type ScreenerAttachParameter struct {
	HkexPrivilege *string `json:"hkex_privilege,omitempty"`
}

// NewScreenerAttachParameter instantiates a new ScreenerAttachParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScreenerAttachParameter() *ScreenerAttachParameter {
	this := ScreenerAttachParameter{}
	var hkexPrivilege string = "true"
	this.HkexPrivilege = &hkexPrivilege
	return &this
}

// NewScreenerAttachParameterWithDefaults instantiates a new ScreenerAttachParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScreenerAttachParameterWithDefaults() *ScreenerAttachParameter {
	this := ScreenerAttachParameter{}
	var hkexPrivilege string = "true"
	this.HkexPrivilege = &hkexPrivilege
	return &this
}

// GetHkexPrivilege returns the HkexPrivilege field value if set, zero value otherwise.
func (o *ScreenerAttachParameter) GetHkexPrivilege() string {
	if o == nil || IsNil(o.HkexPrivilege) {
		var ret string
		return ret
	}
	return *o.HkexPrivilege
}

// GetHkexPrivilegeOk returns a tuple with the HkexPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScreenerAttachParameter) GetHkexPrivilegeOk() (*string, bool) {
	if o == nil || IsNil(o.HkexPrivilege) {
		return nil, false
	}
	return o.HkexPrivilege, true
}

// HasHkexPrivilege returns a boolean if a field has been set.
func (o *ScreenerAttachParameter) HasHkexPrivilege() bool {
	if o != nil && !IsNil(o.HkexPrivilege) {
		return true
	}

	return false
}

// SetHkexPrivilege gets a reference to the given string and assigns it to the HkexPrivilege field.
func (o *ScreenerAttachParameter) SetHkexPrivilege(v string) {
	o.HkexPrivilege = &v
}

func (o ScreenerAttachParameter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScreenerAttachParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HkexPrivilege) {
		toSerialize["hkex_privilege"] = o.HkexPrivilege
	}
	return toSerialize, nil
}

type NullableScreenerAttachParameter struct {
	value *ScreenerAttachParameter
	isSet bool
}

func (v NullableScreenerAttachParameter) Get() *ScreenerAttachParameter {
	return v.value
}

func (v *NullableScreenerAttachParameter) Set(val *ScreenerAttachParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenerAttachParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenerAttachParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenerAttachParameter(val *ScreenerAttachParameter) *NullableScreenerAttachParameter {
	return &NullableScreenerAttachParameter{value: val, isSet: true}
}

func (v NullableScreenerAttachParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenerAttachParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


