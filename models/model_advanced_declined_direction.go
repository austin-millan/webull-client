/*
Webull API

Webull API Documentation

API version: 3.0.1
Contact: austin.millan@protonmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AdvancedDeclinedDirection the model 'AdvancedDeclinedDirection'
type AdvancedDeclinedDirection string

// List of AdvancedDeclinedDirection
const (
	ADVANCED AdvancedDeclinedDirection = "advanced"
	DECLINED AdvancedDeclinedDirection = "declined"
	ACTIVE AdvancedDeclinedDirection = "active"
)

// All allowed values of AdvancedDeclinedDirection enum
var AllowedAdvancedDeclinedDirectionEnumValues = []AdvancedDeclinedDirection{
	"advanced",
	"declined",
	"active",
}

func (v *AdvancedDeclinedDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AdvancedDeclinedDirection(value)
	for _, existing := range AllowedAdvancedDeclinedDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AdvancedDeclinedDirection", value)
}

// NewAdvancedDeclinedDirectionFromValue returns a pointer to a valid AdvancedDeclinedDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAdvancedDeclinedDirectionFromValue(v string) (*AdvancedDeclinedDirection, error) {
	ev := AdvancedDeclinedDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AdvancedDeclinedDirection: valid values are %v", v, AllowedAdvancedDeclinedDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AdvancedDeclinedDirection) IsValid() bool {
	for _, existing := range AllowedAdvancedDeclinedDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AdvancedDeclinedDirection value
func (v AdvancedDeclinedDirection) Ptr() *AdvancedDeclinedDirection {
	return &v
}

type NullableAdvancedDeclinedDirection struct {
	value *AdvancedDeclinedDirection
	isSet bool
}

func (v NullableAdvancedDeclinedDirection) Get() *AdvancedDeclinedDirection {
	return v.value
}

func (v *NullableAdvancedDeclinedDirection) Set(val *AdvancedDeclinedDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvancedDeclinedDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvancedDeclinedDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvancedDeclinedDirection(val *AdvancedDeclinedDirection) *NullableAdvancedDeclinedDirection {
	return &NullableAdvancedDeclinedDirection{value: val, isSet: true}
}

func (v NullableAdvancedDeclinedDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvancedDeclinedDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

